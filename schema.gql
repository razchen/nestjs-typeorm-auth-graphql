# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserGraphQL {
  id: Float!
  name: String!
  email: String!
  roles: [UserRole!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum UserRole {
  ADMIN
  USER
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type PaginatedUsersGraphQL {
  items: [UserGraphQL!]!
  page: Float!
  limit: Float!
  total: Float!
}

type TagGraphQL {
  id: Float!
  content: String!
  items: [ItemGraphQL!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ItemGraphQL {
  id: Float!
  user: UserGraphQL!
  title: String!
  description: String!
  tags: [TagGraphQL!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type PaginatedItemsGraphQL {
  items: [ItemGraphQL!]!
  page: Float!
  limit: Float!
  total: Float!
}

type TokensGraphQL {
  accessToken: String!
  refreshToken: String!
}

type UserWithTokensGraphQL {
  id: Float!
  name: String!
  email: String!
  roles: [UserRole!]!
  accessToken: String!
  refreshToken: String!
}

type Query {
  getAllUsers(page: Int!): PaginatedUsersGraphQL!
  getUserById(id: Int!): UserGraphQL!
  getAllItems(page: Int!): PaginatedItemsGraphQL!
  getItemById(id: Int!): ItemGraphQL!
}

type Mutation {
  register(input: RegisterInput!): UserWithTokensGraphQL!
  login(input: LoginInput!): UserWithTokensGraphQL!
  refresh(input: RefreshInput!): TokensGraphQL!
  createUser(input: CreateUserInput!): UserGraphQL!
  updateUser(id: Int!, input: UpdateUserInput!): UserGraphQL!
  deleteUser(id: Int!): Boolean!
  createItem(input: CreateItemInput!): ItemGraphQL!
  updateItem(id: Float!, input: UpdateItemInput!): ItemGraphQL!
  deleteItem(id: Float!): Boolean!
  updateItemTags(id: Float!, input: UpdateTagsInput!): ItemGraphQL!
}

input RegisterInput {
  name: String!
  email: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}

input RefreshInput {
  refreshToken: String!
}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
}

input UpdateUserInput {
  name: String
  email: String
  password: String
}

input CreateItemInput {
  title: String!
  description: String!
}

input UpdateItemInput {
  title: String!
  description: String!
}

input UpdateTagsInput {
  tagNames: [String!]!
}